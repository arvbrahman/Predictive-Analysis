setwd("~/GitHub/Predictive-Analysis/SVM")
letter_data <- read.csv(file = "letterrecognition",stringsAsFactors = F)
letter_data <- read.csv(file = "letterrecognition.csv",stringsAsFactors = F)
install.packages("kernlab")
library(caTools)
library(kernlab)
spl <- sample.split(letter_data$letter,SplitRatio = 0.8)
Train.letter <- subset(letter_data,spl==T)
Test.letter <- subset(letter_data,spl==F)
str(letter_data)
summary(letter_data)
#splitting the data
set.seed(123)
spl <- sample.split(letter_data$letter,SplitRatio = 0.8)
Train.letter <- subset(letter_data,spl==T)
Test.letter <- subset(letter_data,spl==F)
View(letter_data)
#
Model<- ksvm(letter ~ .,
Train.letter,
kernel = "vanilladot")
#Dataset being used is the letterrecognition data
letter_data <- read.csv(file = "letterrecognition.csv",stringsAsFactors = T)
str(letter_data)
summary(letter_data)
#splitting the data
set.seed(123)
spl <- sample.split(letter_data$letter,SplitRatio = 0.8)
Train.letter <- subset(letter_data,spl==T)
Test.letter <- subset(letter_data,spl==F)
#
Model<- ksvm(letter ~ .,
Train.letter,
kernel = "vanilladot")
Model
predict(Model,Test.letter)
head(letter_data,10)
#Predicting on the testing data
Predictions<- predict(Model,Test.letter)
head(Predictions)
table(Predictions, Test.letter$letter)
agreement <- Predictions==Test.letter$letter
table(agreement)
prop.table(table(agreement))
#
Model.rbf<- ksvm(letter ~ .,
Train.letter,
kernel = "rbfdot")
Model.rbf
predict.rbf <- predict(Model.rbf,Test.letter)
predict.rbf
library(gmodels)
CrossTable(predict.rbf,Test.letter$letter)
CrossTable(predict.rbf,Test.letter)
CrossTable(Test.letter$letter,predict.rbf)
table(predict.rbf,Test.letter$letter)
agreement.rbf <- predict.rbf==Test.letter$letter
table(agreement)
table(agreement.rbf)
prop.table(table(agreement.rbf))
agreement <- Predictions==Test.letter$letter
table(agreement)
prop.table(table(agreement))
#Training with rbfdot kernel
Model.rbf<- ksvm(letter ~ .,
Train.letter,
kernel = "rbfdot")    #Radial Basic Function, when linear cannot be used on the data
#Predicting
predict.rbf <- predict(Model.rbf,Test.letter)
table(agreement.rbf)
prop.table(table(agreement.rbf))
table(predict.rbf,Test.letter$letter)
CrossTable(Test.letter$letter,predict.rbf)
library(caTools)     #For splitting the data
iris
iris <- iris[,-3]
View(iris)
iris
iris <- iris[1:4]
View(iris)
View(iris)
