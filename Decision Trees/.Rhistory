predictions
p<- predict(Tree,Cs.test,type = "class")
p
#Pruning ----
set.seed(2)
pruned <- cv.tree(Model, FUN = prune.misclass)
pruned <- cv.tree(Tree, FUN = prune.misclass)
plot(pruned$size,pruned$dev,type = "b",xlab = "Tree size",ylab = "Deviance")
pruned.tree <- prune.misclass(Tree,best = 9)
plot(pruned.tree)
text(pruned.tree,pretty = 0)
pruned.tree <- prune.misclass(Model,best = 9)
#Required libraries
library(caTools)   #for splitting the data
#Required libraries
library(caTools)   #for splitting the data
library(rpart)     #for decision tree
library(rpart.plot)
library(ggplot2)
#Loading the data
Ps <- read.csv(file = "Position_Salaries.csv",stringsAsFactors = F)
#Selecting the fields required
Ps <- Ps[,2:3]
#Splitting the data into train and test
set.seed(3)
split <- sample.split(Ps$Salary,SplitRatio = 0.65)
train.set <- subset(Ps,split==T)
test.set <- subset(Ps,split==F)
#Model
model <- rpart(Salary ~ .,
train.set,
control = rpart.control(minsplit = 2, cp = 0.01))
model
#Decision Tree
rpart.plot(model)
#
x_grid <- seq(min(Ps$Level),max(Ps$Level), 0.01)
ggplot(Ps,aes(Level,Salary))+
geom_point()+
geom_line()
#Decision Tree
rpart.plot(model)
#
x_grid <- seq(min(Ps$Level),max(Ps$Level), 0.01)
ggplot(Ps,aes(Level,Salary))+
geom_point()+
geom_line()
#
h<- c(6.1,9.1,6.9,5.6,6.7,8.9,7.8,6.8,7.9,6.6)
w<- c(55,56,67,69,78,89,78,56,56,60)
#
relation<- lm(w~h)
relation
df <- data.frame(h=c(5.6,6.2,6.4,5.3))
predict(relation,df)
#Q1 ----
#Create a dataframe
house <- data.frame(size=c(1500,1800,2000,2200,2500,3000,3500,4000,4500,5000),
bedrooms=c(3,3,4,4,5,5,5,6,6,6),
bathrooms=c(2,2,3,3,4,4,3,5,4,5),
age_years=c(10,5,8,12,6,3,15,7,4,2),
price=c(300000,450000,350000,420000,500000,600000,580000,600000,750000,800000))
#Linear Regression model
model<- lm(price ~ .,house)
model
#Predicting
df<- data.frame(size=3200,bedrooms=5,bathrooms=4,age_years=8)
predicted<- predict(model,df)
cat("Predicted selling price: ",predicted,"/n")
#Q2 ----
#Creating a dataframe
emp <-  data.frame(exp=c(1,2,3,4,5,6,7,8,9,10),
edu=c(12,14,16,12,16,14,12,14,16,12),
age=c(21,23,24,25,26,23,27,28,27,25),
salary=c(50,55,60,62,58,65,68,70,72,75))
#Model (Linear Regression)
model<- lm(salary ~ .,emp)
model
model
#Prediction
df <- data.frame(exp=4,edu=16,age=24)
predicted<- predict(model,df)
cat("Predicted salary for the employee: $",predicted,"\n")
help(:psych:)
#Libraries ----
library(psych)
#Loading the dataset ----
ins <-  read.csv(file = "insurance.csv",stringsAsFactors = F)
ins$age2 <- ins$age^2
ins$bmi30 <- ifelse(ins$bmi>=30,1,0)
#Modelling ----
model <- lm(charges ~ . ,ins)
#Analyzing ----
hist(ins$age)
table(ins$region)
describe(ins)
table(ins$region)
cor(ins[c("age","bmi","children","charges")])
describe(ins)
pairs(ins[c("age","bmi","children","charges")])
pairs.panels(ins[c("age","bmi","children","charges")])
predict(model,df)
df2<- data.frame(age=25,sex="female",bmi=30.2,children=2,smoker="no",region="northeast",age2=625,bmi30=1)
predict(model,df)
predict(model,df2)
#Prediction ----
df<- data.frame(age=24,sex="male",bmi=34.5,children=3,smoker="no",region="southeast")
predict(model,df)
#Prediction ----
df2<- data.frame(age=25,sex="female",bmi=30.2,children=2,smoker="no",region="northeast",age2=625,bmi30=1)
predict(model,df2)
#Packages Required
library(ggplot2)
#loading the dataset
possal <- read.csv(file = "Position_Salaries.csv",stringsAsFactors = F)
#Analyzing
str(possal)
summary(possal)
table(possal$Position)
hist(possal$Level)
View(possal)
#Selecting 2nd and 3rd column
pos <- possal[2:3]
#Linear Regression Model
lm.model <- lm(Salary ~ .,pos)
summary(lm.model)
#Fitting some variables for Polynomial Regression
pos$Level2 <- pos$Level^2
pos$Level3 <- pos$Level^3
pos$Level4 <- pos$Level^4
#Polynomial Regression Model
poly.model <- lm(Salary ~ . ,pos)
summary(poly.model)
#Visualizing both the models
ggplot()+
geom_point(aes(Level,Salary),pos,colour = "green")+
geom_line(aes(Level,predict(lm.model,pos)),pos,colour = "orange")+
ggtitle("Truth or Bluff(Linear Regression)")+
theme_dark()
ggplot()+
geom_point(aes(Level,Salary),pos,colour = "green")+
geom_line(aes(Level,predict(poly.model,pos)),pos,colour = "orange")+
ggtitle("Truth or Bluff(Polynomial Regression)")+
theme_dark()
#Visualizing the Regression Model results (for higher resolution and smoother curve)
x_grid <- seq(min(pos$Level),max(pos$Level),0.1)
ggplot()+
geom_point(aes(Level,Salary),
pos,colour = "blue")+
geom_line(aes(x_grid,predict(poly.model,data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
colour = "red")+
ggtitle("Polynomial Regression")+
theme_dark()
#Interpolation Predicting
predict(lm.model,data.frame(Level=6.5))
predict(poly.model,data.frame(Level=6.5,
Level2=6.5^2,
Level3=6.5^3,
Level4=6.5^4))
#ODD SET
#Q1 ----
Cs <- Carseats
#ODD SET
#Q1 ----
#Required Libraries
library(tree)
Cs$Hsales <- as.factor(ifelse(Carseats$Sales>=8,"Yes","No"))
index <- sample(400,300)
Cs.train <- subset(Cs,index)
Cs.train <- Cs[index,]
Cs.test <- Cs[-index,]
View(Cs)
target <- Hsales ~ . -Sales
#Training the model
Cs.Model <- tree(target,Cs.train)
#Training the model
Cs.Model <- tree(target,Cs.train, mindev = 0.01)
#Predictions
predictions <- predict(Cs.Model,Cs.test)
View(Cs.test)
#Predictions
predictions <- predict(Cs.Model,Cs.test,type = "Class")
#Loading and splitting the data
Cs <- Carseats
Carseats$Hsales <- as.factor(ifelse(Carseats$Sales>=7,"Yes","No"))
Carseats$Hsales <- as.factor(ifelse(Carseats$Sales>=8,"Yes","No"))
index <- sample(400,350)
Cs.train <- Carseats[index,]
Cs.test <- Carseats[-index,]
#Separating the target variable
target <- Wsales ~ . -Sales
#Training the model
Tree <- tree(target,Cs.train,mindev = 0.01)
#Predictions
predictions <- predict(Tree,Cs.test,type = "class")
#Training the model
Tree <- tree(target,Cs.train,mindev = 0.01)
#Separating the target variable
target <- Hsales ~ . -Sales
#Training the model
Tree <- tree(target,Cs.train,mindev = 0.01)
#Predictions
predictions <- predict(Tree,Cs.test,type = "class")
#Pruning ----
pruned.tree <- prune.misclass(Tree,best = 9)
plot(pruned.tree)
text(pruned.tree,pretty = 0)
#Loading and splitting the data
Cs <- Carseats
Cs$Hsales <- as.factor(ifelse(Carseats$Sales>=8,"Yes","No"))
index <- sample(400,350)
Cs_train <- Cs[index,]
Cs_test <- Cs[-index,]
#Separating the target variable
target <- Hsales ~ . -Sales
#Training the model
Tree <- tree(target,Cs.train,mindev = 0.01)
#Predictions
predictions <- predict(Tree,Cs.test,type = "class")
#Pruning
pruned.tree <- prune.misclass(Tree,best = 9)
plot(pruned.tree)
text(pruned.tree,pretty = 0)
#ODD SET
#Q3 ----
#Required Libraries
library(tree)
library(ISLR)
#Loading and splitting the data
Cs <- Carseats
Cs$Hsales <- as.factor(ifelse(Carseats$Sales>=8,"Yes","No"))
index <- sample(400,350)
Cs_train <- Cs[index,]
Cs_test <- Cs[-index,]
#Separating the target variable
target <- Hsales ~ . -Sales
#Training the model
Cs_model <- tree(target,Cs_train,mindev = 0.01)
#Predictions
predictions <- predict(Tree,Cs_test,type = "class")
#Predictions
predictions <- predict(Cs_model,Cs_test,type = "class")
#Pruning
pruned.tree <- prune.misclass(Tree,best = 9)
plot(pruned.tree)
text(pruned.tree,pretty = 0)
#Pruning
pruned.tree <- prune.misclass(Cs_model,best = 9)
plot(pruned.tree)
text(pruned.tree,pretty = 0)
cat("The predicted values are"+predictions)
cat("The predicted values are",predictions)
#Q3 ----
#Required Libraries
library(tree)
library(ISLR)
#Loading and splitting the data
Cs <- Carseats
Cs$Hsales <- as.factor(ifelse(Carseats$Sales>=8,"Yes","No"))
index <- sample(400,350)
Cs_train <- Cs[index,]
Cs_test <- Cs[-index,]
#Separating the target variable
target <- Hsales ~ . -Sales
#Training the model
Cs_model <- tree(target,Cs_train,mindev = 0.01)
#Predictions
predictions <- predict(Cs_model,Cs_test,type = "class")
#Pruning
pruned.tree <- prune.misclass(Cs_model,best = 9)
plot(pruned.tree)
text(pruned.tree,pretty = 0)
#Pruning
pruned_tree <- prune.misclass(Cs_model,best = 9)
plot(pruned_tree)
text(pruned_tree,pretty = 0)
#ODD SET
#Q2
#dataset
mtc <- mtcars
View(mtc)
linear.model <- lm(mpg ~ hp,mtc)
linear.test <- data.frame(hp=c(110,136,123,135))
predict(linear.model,linear.test)
#fitting
mtc$hp2 <- mtc$hp^2
View(mtc)
poly.model <- lm(mpg ~ . ,mtc)
poly.model <- lm(mpg ~ +hp + wt +hp2 ,mtc)
poly.model <- lm(mpg ~ +hp +hp2 ,mtc)
#ODD SET
#Q2
#libraries
library(ggplot2)
#Visualization
ggplot()+
geom_point(aes(hp,mpg),mtc,colour = "blue")+
geom_line(aes(hp,predict(linear.model,mtc)),colour = "red")
#Visualization
ggplot()+
geom_point(aes(hp,mpg),mtc,colour = "blue")+
geom_line(aes(hp,predict(linear.model,mtc)),mtc,colour = "red")
#Visualization
ggplot()+
geom_point(aes(hp,mpg),mtc,colour = "blue")+
geom_line(aes(hp,predict(linear.model,mtc)),mtc,colour = "red")
#Visualization
ggplot()+
geom_point(aes(hp,mpg),mtc,colour = "blue")+
geom_line(aes(hp,predict(linear.model,mtc)),mtc,colour = "red")+
ggtitle("Truth or bluff(Linear Model)")+
theme_bw()
ggplot()+
geom_point(aes(hp,mpg),mtc,colour = "blue")+
geom_line(aes(hp,predict(poly.model,mtc)),mtc,colour = "red")+
ggtitle("Truth or bluff (Polynomial model)")+
theme_bw()
#ODD SET
#Q1
Airq <-  airquality
#Pruning
pruned_tree <- prune.misclass(Cs_model,best = 9)
plot(pruned_tree)
text(pruned_tree,pretty = 0)
text(pruned_tree,pretty = 1)
text(pruned_tree,pretty = 2)
0
text(pruned_tree,pretty = 0)
#Pruning
pruned_tree <- prune.misclass(Cs_model,best = 9)
plot(pruned_tree)
text(pruned_tree,pretty = 0)
text(pruned_tree,pretty = 0)
text(pruned_tree,pretty = 0)
#Taking titanic dataset from kaggle ----
#All points and  variable are from that data only
a<- read.csv(file.choose(), stringsAsFactors = F)
summary(a)
which(is.na(a$Age))
which(is.na(a$Fare))
a[153,"Fare"]
#omitting NA values
n <-complete.cases(a)
a[n,]
a<- a[n,]
#separating features
keeps<- c("Pclass","Sex","Age","SibSp","Parch","Embarked","Fare")
df <- a[keeps]
#omitting the unnecessary variables or columns
#Scaling(removing the median then dividing by std)
library(tidyverse)
df_scaled <- df %>%
select(-Sex, -Embarked) %>%
scale()
#visualization ----
#Histogram for continuous variables(Age,Fare)
ggplot(df,aes(x=Age))+
geom_histogram(binwidth = 5, fill = "skyblue", color = "red")
ggplot(df,aes(x=Fare))+
geom_histogram(binwidth = 30, fill = "orange", color = "red")
#bar plot mostly for categorical variables (Sex,Embarked,Pclass)
ggplot(df,aes(Sex))+
geom_bar(fill = c("pink","blue"),color = "red")
ggplot(df,aes(Embarked))+
geom_bar(fill = "steelblue")
ggplot(df,aes(Pclass))+
geom_bar(fill = "tomato")
#Boxplot for comparisons between continuous variables and categorical variables
ggplot(df,aes(factor(Pclass),y=Age))+
geom_boxplot(fill = "steelblue",color = "red")+
ylim(0,80)
ggplot(df,aes(factor(Pclass),y=Fare))+
geom_boxplot(fill = "yellow",color = "tomato")+
scale_y_continuous(breaks = seq(0,515,by=100))+
theme_bw()
#Scatter Plots shows relationship between continuous variables
ggplot(df,aes(Age,Fare,colour = factor(Pclass)))+
geom_point()+
scale_color_manual(values = c("red", "green", "blue"))+
theme_bw()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_bw()
#Scatter Plots shows relationship between continuous variables
ggplot(df,aes(Age,Fare,colour = factor(Pclass)))+
geom_point()+
scale_color_manual(values = c("red", "green", "blue"))+
theme_bw()
ggplot(df,aes(factor(Pclass),y=Fare))+
geom_boxplot(fill = "yellow",color = "tomato")+
scale_y_continuous(breaks = seq(0,515,by=100))+
theme_bw()
#Boxplot for comparisons between continuous variables and categorical variables
ggplot(df,aes(factor(Pclass),y=Age))+
geom_boxplot(fill = "steelblue",color = "red")+
ylim(0,80)
ggplot(df,aes(factor(Pclass),y=Fare))+
geom_boxplot(fill = "yellow",color = "tomato")+
scale_y_continuous(breaks = seq(0,515,by=100))+
theme_bw()
ggplot(df,aes(Pclass))+
geom_bar(fill = "tomato")
#visualization ----
#Histogram for continuous variables(Age,Fare)
ggplot(df,aes(x=Age))+
geom_histogram(binwidth = 5, fill = "skyblue", color = "red")
#visualization ----
#Histogram for continuous variables(Age,Fare)
ggplot(df,aes(x=Age))+
geom_histogram(binwidth = 5, fill = "skyblue", color = "red")+
theme_bw()
#visualization ----
#Histogram for continuous variables(Age,Fare)
ggplot(df,aes(x=Age))+
geom_histogram(binwidth = 5, fill = "skyblue", color = "red")+
theme_classic()
#visualization ----
#Histogram for continuous variables(Age,Fare)
ggplot(df,aes(x=Age))+
geom_histogram(binwidth = 5, fill = "skyblue", color = "red")+
theme_dark()
#bar plot mostly for categorical variables (Sex,Embarked,Pclass)
ggplot(df,aes(Sex))+
geom_bar(fill = c("pink","blue"),color = "red")
#visualization ----
#Histogram for continuous variables(Age,Fare)
ggplot(df,aes(x=Age))+
geom_histogram(binwidth = 5, fill = "skyblue", color = "red")+
theme_dark()
ggplot(df,aes(x=Fare))+
geom_histogram(binwidth = 30, fill = "orange", color = "red")
ggplot(df,aes(x=Fare))+
geom_histogram(binwidth = 30, fill = "orange", color = "red")+
theme_bw()
ggplot(df,aes(x=Fare))+
geom_histogram(binwidth = 30, fill = "orange", color = "red")+
theme_linedraw()
#visualization ----
#Histogram for continuous variables(Age,Fare)
ggplot(df,aes(x=Age))+
geom_histogram(binwidth = 5, fill = "skyblue", color = "red")+
theme_dark()
ggplot(df,aes(x=Fare))+
geom_histogram(binwidth = 30, fill = "orange", color = "red")+
theme_linedraw()
ggplot(df,aes(x=Fare))+
geom_histogram(binwidth = 30, fill = "orange", color = "blue")+
theme_linedraw()
ggplot(df,aes(x=Fare))+
geom_histogram(binwidth = 30, fill = "orange", color = "darkblue")+
theme_linedraw()
ggplot(df,aes(x=Fare))+
geom_histogram(binwidth = 30, fill = "orange", color = "blue")+
theme_linedraw()
#visualization ----
#Histogram for continuous variables(Age,Fare)
ggplot(df,aes(x=Age))+
geom_histogram(binwidth = 5, fill = "skyblue", color = "red")+
theme_dark()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_bw()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_minimal()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_linedraw()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_dark()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_bw()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_classic()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_get()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_gray()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_grey()
ggplot(df,aes(Fare,Age,,color = factor(Sex)))+
geom_point()+
scale_color_manual(values = c("lightpink","lightblue"))+
theme_dark()
ggplot(df,aes(factor(Pclass),y=Fare))+
geom_boxplot(fill = "yellow",color = "tomato")+
scale_y_continuous(breaks = seq(0,515,by=100))+
theme_bw()
#visualization ----
#Histogram for continuous variables(Age,Fare)
ggplot(df,aes(x=Age))+
geom_histogram(binwidth = 5, fill = "skyblue", color = "red")+
theme_dark()
